"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = exports.dev = void 0;
const fs_extra_1 = __importDefault(require("fs-extra"));
const webpack_1 = __importDefault(require("webpack"));
const webpack_dev_server_1 = __importDefault(require("webpack-dev-server"));
const arco_dev_utils_1 = require("@arco-design/arco-dev-utils");
const site_1 = require("../../config/webpack/site");
const webpackWithPromise_1 = __importDefault(require("../utils/webpackWithPromise"));
const dev = (https, ip, port) => {
    ip = ip || '0.0.0.0';
    port = port || 8080;
    const config = site_1.dev;
    const url = `${https ? 'https' : 'http'}://${ip}:${port}`;
    const compiler = (0, webpack_1.default)(config);
    const server = new webpack_dev_server_1.default(compiler, Object.assign(Object.assign({}, config.devServer), { host: ip, port }));
    server.listen(port, ip, () => {
        arco_dev_utils_1.print.success('[arco-scripts]', `Starting server on ${url}`);
    });
};
exports.dev = dev;
const build = () => {
    const config = site_1.prod;
    arco_dev_utils_1.print.info('\nStart to build site...');
    fs_extra_1.default.removeSync(config.output.path);
    return (0, webpackWithPromise_1.default)(config).then(() => arco_dev_utils_1.print.success('[arco-scripts]', 'Build site success!'), (error) => {
        arco_dev_utils_1.print.error('[arco-scripts]', 'Failed to build site');
        console.error(error);
    });
};
exports.build = build;
